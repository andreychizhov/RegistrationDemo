// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PM.Model;

namespace PM.Model.Migrations.SqliteMigrations
{
    [DbContext(typeof(SqliteDataContext))]
    [Migration("20200216080143_CountriesAndProvincesAdded")]
    partial class CountriesAndProvincesAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("PM.Model.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("LocationType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasDiscriminator<int>("LocationType");
                });

            modelBuilder.Entity("PM.Model.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Login")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PM.Model.Entities.Country", b =>
                {
                    b.HasBaseType("PM.Model.Entities.Location");

                    b.HasDiscriminator().HasValue(0);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LocationType = 0,
                            Name = "USA"
                        },
                        new
                        {
                            Id = 5,
                            LocationType = 0,
                            Name = "Ireland"
                        });
                });

            modelBuilder.Entity("PM.Model.Entities.Province", b =>
                {
                    b.HasBaseType("PM.Model.Entities.Location");

                    b.Property<int?>("ParentId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("ParentId");

                    b.HasDiscriminator().HasValue(1);

                    b.HasData(
                        new
                        {
                            Id = 2,
                            LocationType = 1,
                            Name = "USA Province 1",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 3,
                            LocationType = 1,
                            Name = "USA Province 2",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 4,
                            LocationType = 1,
                            Name = "USA Province 3",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 6,
                            LocationType = 1,
                            Name = "Ireland Province 1",
                            ParentId = 5
                        },
                        new
                        {
                            Id = 7,
                            LocationType = 1,
                            Name = "Ireland Province 2",
                            ParentId = 5
                        });
                });

            modelBuilder.Entity("PM.Model.Entities.Province", b =>
                {
                    b.HasOne("PM.Model.Entities.Country", "Country")
                        .WithMany("Provinces")
                        .HasForeignKey("ParentId");
                });
#pragma warning restore 612, 618
        }
    }
}
